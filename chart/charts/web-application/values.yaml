global:
  imagePullSecret: {}
    # name: ""
    # dockerconfigjson: ""
  image: {}
    # registry: gcr.io/my-project
    # tag: latest

replicaCount: 1
port: 8080
#serviceAccountName: my-serviceaccount

  # To use a digest, change those values like that
  # repository: nginx@sha256
  # tag: 2834dc507516af02784808c5f48b7cbe38b8ed5d0f4837f16e78d00deb7e7767
image: {}
  # repository: repo/image
  # registry: gcr.io/my-project
  # tag: latest

imagePullSecret: {}
  # name: ""
  # dockerconfigjson: ""

additionalVolumes: []
# - name: my-volume
#   secret:
#     secretName: my-secret
#   volumeMount:
#     mountPath: /etc/mysecret
#     readOnly: true

# resources:
#   limits:
#     cpu: 100m
#     ephemeral-storage: 1G
#     memory: 1G
#   requests:
#     cpu: 100m
#     ephemeral-storage: 1G
#     memory: 1G

availability:
  podDisruptionBudget:
    maxUnavailable: 10%
  topologySpreadConstraints:
  - topologyKey: topology.kubernetes.io/zone
    maxSkew: 1
    whenUnsatisfiable: ScheduleAnyway
  - topologyKey: kubernetes.io/hostname
    maxSkew: 1
    whenUnsatisfiable: ScheduleAnyway

health:
  liveness:
    path: /healthz
  readiness:
    path: /healthz

terminationGracePeriodSeconds: 30
startupTimeoutSeconds: 30

envFrom: []
# - configMapRef:
#     name: my-configmap1
# - secretRef:
#     name: my-secret-ref1

env: {}
# env:
#   key1: value
#   key2:
#     secretKeyRef:
#       name: my-secret
#       key: my-key
#   key3:
#     configMapKeyRef:
#       name: my-configmap
#       key: my-key
# Also can be specified as a list
# env:
#   - name: key1
#     value: value1
#   - name: key2
#     configMapKeyRef:
#       name: my-configmap
#       key: my-key

expose:
  enabled: true
  gateway: kyma-gateway.kyma-system.svc.cluster.local
  # host: ""

# bindings:
#   ui5-repo-servicerepo:
#     serviceInstanceName: ui5-repo-instance
#     externalName: ui5-kyma-binding
#     secretName: ui5-repo-binding-secret
#     parameters:
#       foo: bar
#     parametersFrom:
#       - secretKeyRef:
#           key: test
#           name: test
#     credentialsRotationPolicy:
#       enabled: true
#   hana:
#     serviceInstanceName: hana-manual
#   portal:
#     fromSecret: manual-secret # user-provided-service
